NEXT_PUBLIC_BASE_URL=http://localhost:3000

# This will be used to replace ipfs:// in IPFS urls, if left blank it will default to using 'https://ipfs.io/ipfs/'
NEXT_PUBLIC_IMAGE_HOST=
# If your image host needs file extensions after the IPFS hash, you can add it here (ie. .jpg)
NEXT_PUBLIC_IMAGE_HOST_APPEND=

# First create a new project on Alchemy, and grab the API Key from the project dashboard (under 'View Key')
NEXT_PUBLIC_ALCHEMY_ID=_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC

# 1 = mainnet, 4 = rinkeby, 5 = goerli, 1337 = hardhat (local)
NEXT_PUBLIC_CHAIN_ID=5

# Comma-separated for multiple contracts
# the NTF that I made
NEXT_PUBLIC_CONTRACT_ADDRESSES=0xccdd170392959807a69fbcca3306309db07ef3ef

# You can easily grab all of the edition contract addresses created by a single wallet by running the following command in a terminal, replacing `0x17cd072cBd45031EFc21Da538c783E0ed3b25DCc` with the desired wallet address (requires python).
#
# Rinkeby subgraph: https://api.thegraph.com/subgraphs/name/iainnash/erc721droprinkeby
# Goerli subgraph: https://api.thegraph.com/subgraphs/name/iainnash/erc721drop-goerli
#
# curl -s 'https://api.thegraph.com/subgraphs/name/iainnash/zora-editions-mainnet' \
#   -X POST -H 'content-type: application/json' \
#   --data '{
#     "query": "{erc721Drops(where: { owner: \"0x17cd072cBd45031EFc21Da538c783E0ed3b25DCc\", }) { address}}"
#   }' | python3 -c "import sys, json; print(','.join(list(map(lambda x: x['address'], json.load(sys.stdin)['data']['erc721Drops']))))"
