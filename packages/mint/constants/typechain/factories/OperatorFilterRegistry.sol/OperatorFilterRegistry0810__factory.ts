/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OperatorFilterRegistry0810,
  OperatorFilterRegistry0810Interface,
} from "../../OperatorFilterRegistry.sol/OperatorFilterRegistry0810";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "AddressAlreadyFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "filtered",
        type: "address",
      },
    ],
    name: "AddressFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "AddressNotFiltered",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "AlreadySubscribed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotCopyFromSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotFilterEOAs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "CannotSubscribeToRegistrantWithSubscription",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSubscribeToSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSubscribeToZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "CannotUpdateWhileSubscribed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashAlreadyFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashNotFiltered",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "NotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSubscribed",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAddressOrOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "CodeHashUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "CodeHashesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "OperatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "OperatorsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "registered",
        type: "bool",
      },
    ],
    name: "RegistrationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscription",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "subscribed",
        type: "bool",
      },
    ],
    name: "SubscriptionUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "codeHashOf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrantToCopy",
        type: "address",
      },
    ],
    name: "copyEntriesOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "filteredCodeHashAt",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "filteredCodeHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "filteredOperatorAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "filteredOperators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "isCodeHashFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operatorWithCode",
        type: "address",
      },
    ],
    name: "isCodeHashOfFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isOperatorAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isOperatorFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrantToCopy",
        type: "address",
      },
    ],
    name: "registerAndCopyEntries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "registerAndSubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "newSubscription",
        type: "address",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "subscriberAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "subscribers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "subscriptionOf",
    outputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "unregister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bool",
        name: "copyExistingEntries",
        type: "bool",
      },
    ],
    name: "unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateCodeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateCodeHashes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612bf5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c8063712fc00b116100e3578063b314d4141161008c578063c430880511610066578063c4308805146103aa578063c6171134146103bd578063e4aecb54146103d057600080fd5b8063b314d4141461034e578063bbd652c714610361578063c3c5a5471461037c57600080fd5b8063a14584c1116100bd578063a14584c114610307578063a2f367ab1461031a578063a6529eb51461032d57600080fd5b8063712fc00b146102ce5780637d3e3dbe146102e1578063a0af2903146102f457600080fd5b80633f1cc5fa116101455780635745ae281161011f5780635745ae28146102785780635eae3173146102985780636af0c315146102bb57600080fd5b80633f1cc5fa1461023f5780634420e4861461025257806355940e511461026557600080fd5b80632ec2c246116101765780632ec2c246146101ee57806334a0dc10146102015780633c5030bb1461021457600080fd5b8063063298b61461019d5780631e06b4b4146101b257806322fa2762146101c5575b600080fd5b6101b06101ab366004612844565b6103e3565b005b6101b06101c03660046128ab565b610759565b6101d86101d33660046128e4565b610958565b6040516101e59190612901565b60405180910390f35b6101b06101fc3660046128e4565b6109c6565b6101b061020f366004612945565b610bb2565b6102276102223660046128e4565b610dac565b6040516001600160a01b0390911681526020016101e5565b61022761024d36600461297a565b610e13565b6101b06102603660046128e4565b610e8d565b61022761027336600461297a565b611010565b61028b6102863660046128e4565b611032565b6040516101e591906129a6565b6102ab6102a63660046128ab565b611056565b60405190151581526020016101e5565b6102ab6102c936600461297a565b6110d6565b6101b06102dc3660046129e7565b61113e565b6101b06102ef3660046128ab565b6113ed565b6101b06103023660046128ab565b6116be565b6101b0610315366004612844565b6118d8565b6101b0610328366004612a25565b611bba565b61034061033b36600461297a565b611e28565b6040519081526020016101e5565b6101b061035c3660046128ab565b611e90565b61034061036f3660046128e4565b6001600160a01b03163f90565b6102ab61038a3660046128e4565b6001600160a01b0390811660009081526002602052604090205416151590565b61028b6103b83660046128e4565b612229565b6102ab6103cb3660046128ab565b612290565b6102ab6103de3660046128ab565b61239d565b83336001600160a01b038216146104ed57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561044e575060408051601f3d908101601f1916820190925261044b91810190612a63565b60015b6104c2573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b606091505b5080516104ba576040517fb2c1414000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b336001600160a01b038216146104eb57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380861660009081526002602052604090205416806105365760405163bfc6c33760e01b81526001600160a01b03871660048201526024015b60405180910390fd5b856001600160a01b0316816001600160a01b03161461058c576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260240161052d565b6001600160a01b038616600090815260016020526040902084846106335760005b8181101561062d5760008888838181106105c9576105c9612a80565b90506020020135905060006105e7828661240590919063ffffffff16565b905080610623576040517f478730a80000000000000000000000000000000000000000000000000000000081526004810183905260240161052d565b50506001016105ad565b50610709565b60005b8181101561070757600088888381811061065257610652612a80565b9050602002013590507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708114156106b5576040517ff575ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106c18583612411565b9050806106fd576040517f186bea000000000000000000000000000000000000000000000000000000000081526004810183905260240161052d565b5050600101610636565b505b841515886001600160a01b03167f34e9f70c5a16a4df2a396cf0cbc4735eb3c7fb6ae40aaa0b34be7720121d1b968989604051610747929190612aaf565b60405180910390a35050505050505050565b81336001600160a01b0382161461081d57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107c4575060408051601f3d908101601f191682019092526107c191810190612a63565b60015b6107f2573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b0382161461081b57604051631f9ebdff60e31b815260040160405180910390fd5b505b816001600160a01b0316836001600160a01b03161415610869576040517f1acab6b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806108ad5760405163bfc6c33760e01b81526001600160a01b038516600482015260240161052d565b836001600160a01b0316816001600160a01b031614610903576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260240161052d565b6001600160a01b0380841660009081526002602052604090205416806109475760405163bfc6c33760e01b81526001600160a01b038516600482015260240161052d565b610951858561241d565b5050505050565b6001600160a01b03808216600081815260026020526040902054606092169081146109a5576001600160a01b038116600090815260016020526040902061099e90612576565b9392505050565b6001600160a01b038316600090815260016020526040902061099e90612576565b80336001600160a01b03821614610a8a57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a31575060408051601f3d908101601f19168201909252610a2e91810190612a63565b60015b610a5f573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614610a8857604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038083166000908152600260205260409020541680610ace5760405163bfc6c33760e01b81526001600160a01b038416600482015260240161052d565b826001600160a01b0316816001600160a01b031614610b45576001600160a01b0381166000908152600360205260409020610b099084612581565b506040516000906001600160a01b0380841691908616907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a45b6001600160a01b03831660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055519091907f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb59908390a3505050565b81336001600160a01b03821614610c7657806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c1d575060408051601f3d908101601f19168201909252610c1a91810190612a63565b60015b610c4b573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614610c7457604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038084166000908152600260205260409020541680610cba5760405163bfc6c33760e01b81526001600160a01b038516600482015260240161052d565b836001600160a01b0316816001600160a01b03161415610d06576040517f237e6c2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381166000908152600360205260409020610d289085612581565b506001600160a01b0380851660008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001684179055519092841691907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a48215610da657610da6848261241d565b50505050565b6001600160a01b038082166000908152600260205260409020541680610df05760405163bfc6c33760e01b81526001600160a01b038316600482015260240161052d565b816001600160a01b0316816001600160a01b03161415610e0e575060005b919050565b6001600160a01b03808316600081815260026020526040812054909216908114610e61576001600160a01b0381166000908152602081905260409020610e599084612596565b915050610e87565b6001600160a01b0384166000908152602081905260409020610e839084612596565b9150505b92915050565b80336001600160a01b03821614610f5157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ef8575060408051601f3d908101601f19168201909252610ef591810190612a63565b60015b610f26573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614610f4f57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038281166000908152600260205260409020541615610fa3576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551600192917f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5991a35050565b6001600160a01b038216600090815260036020526040812061099e9083612596565b6001600160a01b0381166000908152600360205260409020606090610e87906125a2565b6001600160a01b0382811660008181526002602052604081205490928085163f9291169081146110ab576001600160a01b03811660009081526001602052604090206110a290836125af565b92505050610e87565b6001600160a01b03851660009081526001602052604090206110cd90836125af565b95945050505050565b6001600160a01b0380831660008181526002602052604081205490921690811461111c576001600160a01b0381166000908152600160205260409020610e5990846125af565b6001600160a01b0384166000908152600160205260409020610e8390846125af565b82336001600160a01b0382161461120257806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111a9575060408051601f3d908101601f191682019092526111a691810190612a63565b60015b6111d7573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b0382161461120057604051631f9ebdff60e31b815260040160405180910390fd5b505b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47083141561125c576040517ff575ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380851660009081526002602052604090205416806112a05760405163bfc6c33760e01b81526001600160a01b038616600482015260240161052d565b846001600160a01b0316816001600160a01b0316146112f6576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260240161052d565b6001600160a01b03851660009081526001602052604090208361136157600061131f8287612405565b90508061135b576040517f478730a80000000000000000000000000000000000000000000000000000000081526004810187905260240161052d565b506113ab565b600061136d8287612411565b9050806113a9576040517f186bea000000000000000000000000000000000000000000000000000000000081526004810187905260240161052d565b505b83151585876001600160a01b03167fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d60405160405180910390a4505050505050565b81336001600160a01b038216146114b157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611458575060408051601f3d908101601f1916820190925261145591810190612a63565b60015b611486573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b038216146114af57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b03808416600090815260026020526040902054168015611504576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826001600160a01b0316846001600160a01b03161415611550576040517f347f118f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806115945760405163bfc6c33760e01b81526001600160a01b038516600482015260240161052d565b836001600160a01b0316816001600160a01b0316146115ea576040517f768e549c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260240161052d565b6001600160a01b03858116600090815260026020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169489169485179055928252600390522061164490866125c7565b506040516001906001600160a01b038716907f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5990600090a36040516001906001600160a01b0380871691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e890600090a45050505050565b81336001600160a01b0382161461178257806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611729575060408051601f3d908101601f1916820190925261172691810190612a63565b60015b611757573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b0382161461178057604051631f9ebdff60e31b815260040160405180910390fd5b505b826001600160a01b0316826001600160a01b031614156117ce576040517f1acab6b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03808416600090815260026020526040902054168015611821576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806118655760405163bfc6c33760e01b81526001600160a01b038516600482015260240161052d565b6001600160a01b03851660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551600192917f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5991a3610951858561241d565b83336001600160a01b0382161461199c57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611943575060408051601f3d908101601f1916820190925261194091810190612a63565b60015b611971573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b0382161461199a57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380861660009081526002602052604090205416806119e05760405163bfc6c33760e01b81526001600160a01b038716600482015260240161052d565b856001600160a01b0316816001600160a01b031614611a36576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260240161052d565b6001600160a01b03861660009081526020819052604090208484611aea5760005b81811015611ae4576000888883818110611a7357611a73612a80565b9050602002016020810190611a8891906128e4565b90506000611a968583612581565b905080611ada576040517f45525c0e0000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260240161052d565b5050600101611a57565b50611b7c565b60005b81811015611b7a576000888883818110611b0957611b09612a80565b9050602002016020810190611b1e91906128e4565b90506000611b2c85836125c7565b905080611b70576040517f0bb442340000000000000000000000000000000000000000000000000000000081526001600160a01b038316600482015260240161052d565b5050600101611aed565b505b841515886001600160a01b03167f02b85afdacb82d5512c6f05566b3018677ffcbd7e5f75e498bc64081131cbd6c8989604051610747929190612b04565b82336001600160a01b03821614611c7e57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611c25575060408051601f3d908101601f19168201909252611c2291810190612a63565b60015b611c53573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614611c7c57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038085166000908152600260205260409020541680611cc25760405163bfc6c33760e01b81526001600160a01b038616600482015260240161052d565b846001600160a01b0316816001600160a01b031614611d18576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b038216600482015260240161052d565b6001600160a01b038516600090815260208190526040902083611d8b576000611d418287612581565b905080611d85576040517f45525c0e0000000000000000000000000000000000000000000000000000000081526001600160a01b038716600482015260240161052d565b50611ddd565b6000611d9782876125c7565b905080611ddb576040517f0bb442340000000000000000000000000000000000000000000000000000000081526001600160a01b038716600482015260240161052d565b505b831515856001600160a01b0316876001600160a01b03167f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a60405160405180910390a4505050505050565b6001600160a01b03808316600081815260026020526040812054909216908114611e6e576001600160a01b0381166000908152600160205260409020610e599084612596565b6001600160a01b0384166000908152600160205260409020610e839084612596565b81336001600160a01b03821614611f5457806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611efb575060408051601f3d908101601f19168201909252611ef891810190612a63565b60015b611f29573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614611f5257604051631f9ebdff60e31b815260040160405180910390fd5b505b816001600160a01b0316836001600160a01b03161415611fa0576040517f347f118f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216611fe0576040517fb05574d300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806120245760405163bfc6c33760e01b81526001600160a01b038516600482015260240161052d565b826001600160a01b0316816001600160a01b0316141561207b576040517f73a416490000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260240161052d565b6001600160a01b0380841660009081526002602052604090205416806120bf5760405163bfc6c33760e01b81526001600160a01b038516600482015260240161052d565b836001600160a01b0316816001600160a01b031614612115576040517f768e549c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260240161052d565b846001600160a01b0316826001600160a01b03161461218c576001600160a01b03821660009081526003602052604090206121509086612581565b506040516000906001600160a01b0380851691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a45b6001600160a01b03858116600090815260026020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948916948517905592825260039052206121e690866125c7565b506040516001906001600160a01b0380871691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e890600090a45050505050565b6001600160a01b038082166000818152600260205260409020546060921690811461226f576001600160a01b038116600090815260208190526040902061099e906125a2565b6001600160a01b038316600090815260208190526040902061099e906125a2565b6001600160a01b038083166000908152600260205260408120549091168015612393576001600160a01b03811660009081526020818152604080832060019092529091206122de82866125dc565b15612320576040517fa8cf495d0000000000000000000000000000000000000000000000000000000081526001600160a01b038616600482015260240161052d565b6001600160a01b0385163b15612390576001600160a01b0385163f61234582826125af565b1561238e576040517f5f3853a90000000000000000000000000000000000000000000000000000000081526001600160a01b03871660048201526024810182905260440161052d565b505b50505b5060019392505050565b6001600160a01b038083166000818152600260205260408120549092169081146123e3576001600160a01b0381166000908152602081905260409020610e5990846125dc565b6001600160a01b0384166000908152602081905260409020610e8390846125dc565b600061099e83836125fe565b600061099e83836126f1565b6001600160a01b03811660009081526020818152604080832060019092528220909161244883612740565b9050600061245583612740565b905060005b828110156124e357600061246e8683612596565b6001600160a01b03891660009081526020819052604081209192509061249490836125c7565b905080156124d9576040516001906001600160a01b0380851691908c16907f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a90600090a45b505060010161245a565b5060005b8181101561256d5760006124fb8583612596565b6001600160a01b0389166000908152600160205260408120919250906125219083612411565b905080156125635760405160019083906001600160a01b038c16907fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d90600090a45b50506001016124e7565b50505050505050565b6060610e878261274a565b600061099e836001600160a01b0384166125fe565b600061099e83836127a6565b6060600061099e8361274a565b6000818152600183016020526040812054151561099e565b600061099e836001600160a01b0384166126f1565b6001600160a01b0381166000908152600183016020526040812054151561099e565b600081815260018301602052604081205480156126e7576000612622600183612b52565b855490915060009061263690600190612b52565b905081811461269b57600086600001828154811061265657612656612a80565b906000526020600020015490508087600001848154811061267957612679612a80565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806126ac576126ac612b90565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610e87565b6000915050610e87565b600081815260018301602052604081205461273857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610e87565b506000610e87565b6000610e87825490565b60608160000180548060200260200160405190810160405280929190818152602001828054801561279a57602002820191906000526020600020905b815481526020019060010190808311612786575b50505050509050919050565b60008260000182815481106127bd576127bd612a80565b9060005260206000200154905092915050565b6001600160a01b03811681146127e557600080fd5b50565b60008083601f8401126127fa57600080fd5b50813567ffffffffffffffff81111561281257600080fd5b6020830191508360208260051b850101111561282d57600080fd5b9250929050565b80358015158114610e0e57600080fd5b6000806000806060858703121561285a57600080fd5b8435612865816127d0565b9350602085013567ffffffffffffffff81111561288157600080fd5b61288d878288016127e8565b90945092506128a0905060408601612834565b905092959194509250565b600080604083850312156128be57600080fd5b82356128c9816127d0565b915060208301356128d9816127d0565b809150509250929050565b6000602082840312156128f657600080fd5b813561099e816127d0565b6020808252825182820181905260009190848201906040850190845b818110156129395783518352928401929184019160010161291d565b50909695505050505050565b6000806040838503121561295857600080fd5b8235612963816127d0565b915061297160208401612834565b90509250929050565b6000806040838503121561298d57600080fd5b8235612998816127d0565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156129395783516001600160a01b0316835292840192918401916001016129c2565b6000806000606084860312156129fc57600080fd5b8335612a07816127d0565b925060208401359150612a1c60408501612834565b90509250925092565b600080600060608486031215612a3a57600080fd5b8335612a45816127d0565b92506020840135612a55816127d0565b9150612a1c60408501612834565b600060208284031215612a7557600080fd5b815161099e816127d0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020815281602082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612ae857600080fd5b8260051b80856040850137600092016040019182525092915050565b60208082528181018390526000908460408401835b86811015612b47578235612b2c816127d0565b6001600160a01b031682529183019190830190600101612b19565b509695505050505050565b600082821015612b8b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212201628aaacb2fc800e0bea11f01e252a2366871214faddf5389beb5ab513c37f6964736f6c634300080a0033";

type OperatorFilterRegistry0810ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OperatorFilterRegistry0810ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OperatorFilterRegistry0810__factory extends ContractFactory {
  constructor(...args: OperatorFilterRegistry0810ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OperatorFilterRegistry0810> {
    return super.deploy(overrides || {}) as Promise<OperatorFilterRegistry0810>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OperatorFilterRegistry0810 {
    return super.attach(address) as OperatorFilterRegistry0810;
  }
  override connect(signer: Signer): OperatorFilterRegistry0810__factory {
    return super.connect(signer) as OperatorFilterRegistry0810__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperatorFilterRegistry0810Interface {
    return new utils.Interface(_abi) as OperatorFilterRegistry0810Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OperatorFilterRegistry0810 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OperatorFilterRegistry0810;
  }
}
