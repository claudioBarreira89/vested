/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  OperatorFilterRegistry0817,
  OperatorFilterRegistry0817Interface,
} from "../../OperatorFilterRegistry.sol/OperatorFilterRegistry0817";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "AddressAlreadyFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "filtered",
        type: "address",
      },
    ],
    name: "AddressFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "AddressNotFiltered",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "AlreadySubscribed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotCopyFromSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotFilterEOAs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "CannotSubscribeToRegistrantWithSubscription",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSubscribeToSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSubscribeToZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "CannotUpdateWhileSubscribed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashAlreadyFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashNotFiltered",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "NotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSubscribed",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAddressOrOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "CodeHashUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "CodeHashesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "OperatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "OperatorsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "registered",
        type: "bool",
      },
    ],
    name: "RegistrationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscription",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "subscribed",
        type: "bool",
      },
    ],
    name: "SubscriptionUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "codeHashOf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrantToCopy",
        type: "address",
      },
    ],
    name: "copyEntriesOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "filteredCodeHashAt",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "filteredCodeHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "filteredOperatorAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "filteredOperators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "isCodeHashFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operatorWithCode",
        type: "address",
      },
    ],
    name: "isCodeHashOfFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isOperatorAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isOperatorFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrantToCopy",
        type: "address",
      },
    ],
    name: "registerAndCopyEntries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "registerAndSubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "newSubscription",
        type: "address",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "subscriberAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "subscribers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "subscriptionOf",
    outputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "unregister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bool",
        name: "copyExistingEntries",
        type: "bool",
      },
    ],
    name: "unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateCodeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateCodeHashes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612be8806100206000396000f3fe608060405234801561001057600080fd5b50600436106101985760003560e01c8063712fc00b116100e3578063b314d4141161008c578063c430880511610066578063c4308805146103aa578063c6171134146103bd578063e4aecb54146103d057600080fd5b8063b314d4141461034e578063bbd652c714610361578063c3c5a5471461037c57600080fd5b8063a14584c1116100bd578063a14584c114610307578063a2f367ab1461031a578063a6529eb51461032d57600080fd5b8063712fc00b146102ce5780637d3e3dbe146102e1578063a0af2903146102f457600080fd5b80633f1cc5fa116101455780635745ae281161011f5780635745ae28146102785780635eae3173146102985780636af0c315146102bb57600080fd5b80633f1cc5fa1461023f5780634420e4861461025257806355940e511461026557600080fd5b80632ec2c246116101765780632ec2c246146101ee57806334a0dc10146102015780633c5030bb1461021457600080fd5b8063063298b61461019d5780631e06b4b4146101b257806322fa2762146101c5575b600080fd5b6101b06101ab36600461283e565b6103e3565b005b6101b06101c03660046128a5565b61075b565b6101d86101d33660046128de565b610959565b6040516101e591906128fb565b60405180910390f35b6101b06101fc3660046128de565b6109c7565b6101b061020f36600461293f565b610bb3565b6102276102223660046128de565b610dac565b6040516001600160a01b0390911681526020016101e5565b61022761024d366004612974565b610e12565b6101b06102603660046128de565b610e8c565b610227610273366004612974565b61100f565b61028b6102863660046128de565b611031565b6040516101e591906129a0565b6102ab6102a63660046128a5565b611055565b60405190151581526020016101e5565b6102ab6102c9366004612974565b6110d5565b6101b06102dc3660046129e1565b61113d565b6101b06102ef3660046128a5565b6113eb565b6101b06103023660046128a5565b6116bb565b6101b061031536600461283e565b6118d4565b6101b0610328366004612a1f565b611bb6565b61034061033b366004612974565b611e24565b6040519081526020016101e5565b6101b061035c3660046128a5565b611e8c565b61034061036f3660046128de565b6001600160a01b03163f90565b6102ab61038a3660046128de565b6001600160a01b0390811660009081526002602052604090205416151590565b61028b6103b83660046128de565b612223565b6102ab6103cb3660046128a5565b61228a565b6102ab6103de3660046128a5565b612397565b83336001600160a01b038216146104f057806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561044e575060408051601f3d908101601f1916820190925261044b91810190612a5d565b60015b6104c5573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b606091505b5080516000036104bd576040517fb2c1414000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b336001600160a01b038216146104ee57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380861660009081526002602052604090205416806105395760405163bfc6c33760e01b81526001600160a01b03871660048201526024015b60405180910390fd5b856001600160a01b0316816001600160a01b03161461058f576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610530565b6001600160a01b038616600090815260016020526040902084846106365760005b818110156106305760008888838181106105cc576105cc612a7a565b90506020020135905060006105ea82866123ff90919063ffffffff16565b905080610626576040517f478730a800000000000000000000000000000000000000000000000000000000815260048101839052602401610530565b50506001016105b0565b5061070b565b60005b8181101561070957600088888381811061065557610655612a7a565b9050602002013590507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081036106b7576040517ff575ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006106c3858361240b565b9050806106ff576040517f186bea0000000000000000000000000000000000000000000000000000000000815260048101839052602401610530565b5050600101610639565b505b841515886001600160a01b03167f34e9f70c5a16a4df2a396cf0cbc4735eb3c7fb6ae40aaa0b34be7720121d1b968989604051610749929190612aa9565b60405180910390a35050505050505050565b81336001600160a01b0382161461081f57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156107c6575060408051601f3d908101601f191682019092526107c391810190612a5d565b60015b6107f4573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b0382161461081d57604051631f9ebdff60e31b815260040160405180910390fd5b505b816001600160a01b0316836001600160a01b03160361086a576040517f1acab6b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806108ae5760405163bfc6c33760e01b81526001600160a01b0385166004820152602401610530565b836001600160a01b0316816001600160a01b031614610904576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610530565b6001600160a01b0380841660009081526002602052604090205416806109485760405163bfc6c33760e01b81526001600160a01b0385166004820152602401610530565b6109528585612417565b5050505050565b6001600160a01b03808216600081815260026020526040902054606092169081146109a6576001600160a01b038116600090815260016020526040902061099f90612570565b9392505050565b6001600160a01b038316600090815260016020526040902061099f90612570565b80336001600160a01b03821614610a8b57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a32575060408051601f3d908101601f19168201909252610a2f91810190612a5d565b60015b610a60573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614610a8957604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038083166000908152600260205260409020541680610acf5760405163bfc6c33760e01b81526001600160a01b0384166004820152602401610530565b826001600160a01b0316816001600160a01b031614610b46576001600160a01b0381166000908152600360205260409020610b0a908461257b565b506040516000906001600160a01b0380841691908616907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a45b6001600160a01b03831660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055519091907f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb59908390a3505050565b81336001600160a01b03821614610c7757806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c1e575060408051601f3d908101601f19168201909252610c1b91810190612a5d565b60015b610c4c573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614610c7557604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038084166000908152600260205260409020541680610cbb5760405163bfc6c33760e01b81526001600160a01b0385166004820152602401610530565b836001600160a01b0316816001600160a01b031603610d06576040517f237e6c2800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381166000908152600360205260409020610d28908561257b565b506001600160a01b0380851660008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001684179055519092841691907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a48215610da657610da68482612417565b50505050565b6001600160a01b038082166000908152600260205260409020541680610df05760405163bfc6c33760e01b81526001600160a01b0383166004820152602401610530565b816001600160a01b0316816001600160a01b031603610e0d575060005b919050565b6001600160a01b03808316600081815260026020526040812054909216908114610e60576001600160a01b0381166000908152602081905260409020610e589084612590565b915050610e86565b6001600160a01b0384166000908152602081905260409020610e829084612590565b9150505b92915050565b80336001600160a01b03821614610f5057806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ef7575060408051601f3d908101601f19168201909252610ef491810190612a5d565b60015b610f25573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614610f4e57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038281166000908152600260205260409020541615610fa2576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551600192917f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5991a35050565b6001600160a01b038216600090815260036020526040812061099f9083612590565b6001600160a01b0381166000908152600360205260409020606090610e869061259c565b6001600160a01b0382811660008181526002602052604081205490928085163f9291169081146110aa576001600160a01b03811660009081526001602052604090206110a190836125a9565b92505050610e86565b6001600160a01b03851660009081526001602052604090206110cc90836125a9565b95945050505050565b6001600160a01b0380831660008181526002602052604081205490921690811461111b576001600160a01b0381166000908152600160205260409020610e5890846125a9565b6001600160a01b0384166000908152600160205260409020610e8290846125a9565b82336001600160a01b0382161461120157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156111a8575060408051601f3d908101601f191682019092526111a591810190612a5d565b60015b6111d6573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b038216146111ff57604051631f9ebdff60e31b815260040160405180910390fd5b505b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470830361125a576040517ff575ead800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03808516600090815260026020526040902054168061129e5760405163bfc6c33760e01b81526001600160a01b0386166004820152602401610530565b846001600160a01b0316816001600160a01b0316146112f4576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610530565b6001600160a01b03851660009081526001602052604090208361135f57600061131d82876123ff565b905080611359576040517f478730a800000000000000000000000000000000000000000000000000000000815260048101879052602401610530565b506113a9565b600061136b828761240b565b9050806113a7576040517f186bea0000000000000000000000000000000000000000000000000000000000815260048101879052602401610530565b505b83151585876001600160a01b03167fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d60405160405180910390a4505050505050565b81336001600160a01b038216146114af57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611456575060408051601f3d908101601f1916820190925261145391810190612a5d565b60015b611484573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b038216146114ad57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b03808416600090815260026020526040902054168015611502576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826001600160a01b0316846001600160a01b03160361154d576040517f347f118f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806115915760405163bfc6c33760e01b81526001600160a01b0385166004820152602401610530565b836001600160a01b0316816001600160a01b0316146115e7576040517f768e549c0000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610530565b6001600160a01b03858116600090815260026020908152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169489169485179055928252600390522061164190866125c1565b506040516001906001600160a01b038716907f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5990600090a36040516001906001600160a01b0380871691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e890600090a45050505050565b81336001600160a01b0382161461177f57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611726575060408051601f3d908101601f1916820190925261172391810190612a5d565b60015b611754573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b0382161461177d57604051631f9ebdff60e31b815260040160405180910390fd5b505b826001600160a01b0316826001600160a01b0316036117ca576040517f1acab6b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416801561181d576040517f3a81d6fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806118615760405163bfc6c33760e01b81526001600160a01b0385166004820152602401610530565b6001600160a01b03851660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551600192917f86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb5991a36109528585612417565b83336001600160a01b0382161461199857806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561193f575060408051601f3d908101601f1916820190925261193c91810190612a5d565b60015b61196d573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b0382161461199657604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380861660009081526002602052604090205416806119dc5760405163bfc6c33760e01b81526001600160a01b0387166004820152602401610530565b856001600160a01b0316816001600160a01b031614611a32576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610530565b6001600160a01b03861660009081526020819052604090208484611ae65760005b81811015611ae0576000888883818110611a6f57611a6f612a7a565b9050602002016020810190611a8491906128de565b90506000611a92858361257b565b905080611ad6576040517f45525c0e0000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610530565b5050600101611a53565b50611b78565b60005b81811015611b76576000888883818110611b0557611b05612a7a565b9050602002016020810190611b1a91906128de565b90506000611b2885836125c1565b905080611b6c576040517f0bb442340000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610530565b5050600101611ae9565b505b841515886001600160a01b03167f02b85afdacb82d5512c6f05566b3018677ffcbd7e5f75e498bc64081131cbd6c8989604051610749929190612afb565b82336001600160a01b03821614611c7a57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611c21575060408051601f3d908101601f19168201909252611c1e91810190612a5d565b60015b611c4f573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614611c7857604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038085166000908152600260205260409020541680611cbe5760405163bfc6c33760e01b81526001600160a01b0386166004820152602401610530565b846001600160a01b0316816001600160a01b031614611d14576040517f04af4d690000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610530565b6001600160a01b038516600090815260208190526040902083611d87576000611d3d828761257b565b905080611d81576040517f45525c0e0000000000000000000000000000000000000000000000000000000081526001600160a01b0387166004820152602401610530565b50611dd9565b6000611d9382876125c1565b905080611dd7576040517f0bb442340000000000000000000000000000000000000000000000000000000081526001600160a01b0387166004820152602401610530565b505b831515856001600160a01b0316876001600160a01b03167f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a60405160405180910390a4505050505050565b6001600160a01b03808316600081815260026020526040812054909216908114611e6a576001600160a01b0381166000908152600160205260409020610e589084612590565b6001600160a01b0384166000908152600160205260409020610e829084612590565b81336001600160a01b03821614611f5057806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611ef7575060408051601f3d908101601f19168201909252611ef491810190612a5d565b60015b611f25573d80801561047c576040519150601f19603f3d011682016040523d82523d6000602084013e610481565b336001600160a01b03821614611f4e57604051631f9ebdff60e31b815260040160405180910390fd5b505b816001600160a01b0316836001600160a01b031603611f9b576040517f347f118f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216611fdb576040517fb05574d300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03808416600090815260026020526040902054168061201f5760405163bfc6c33760e01b81526001600160a01b0385166004820152602401610530565b826001600160a01b0316816001600160a01b031603612075576040517f73a416490000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602401610530565b6001600160a01b0380841660009081526002602052604090205416806120b95760405163bfc6c33760e01b81526001600160a01b0385166004820152602401610530565b836001600160a01b0316816001600160a01b03161461210f576040517f768e549c0000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610530565b846001600160a01b0316826001600160a01b031614612186576001600160a01b038216600090815260036020526040902061214a908661257b565b506040516000906001600160a01b0380851691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8908490a45b6001600160a01b03858116600090815260026020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000016948916948517905592825260039052206121e090866125c1565b506040516001906001600160a01b0380871691908816907e38c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e890600090a45050505050565b6001600160a01b0380821660008181526002602052604090205460609216908114612269576001600160a01b038116600090815260208190526040902061099f9061259c565b6001600160a01b038316600090815260208190526040902061099f9061259c565b6001600160a01b03808316600090815260026020526040812054909116801561238d576001600160a01b03811660009081526020818152604080832060019092529091206122d882866125d6565b1561231a576040517fa8cf495d0000000000000000000000000000000000000000000000000000000081526001600160a01b0386166004820152602401610530565b6001600160a01b0385163b1561238a576001600160a01b0385163f61233f82826125a9565b15612388576040517f5f3853a90000000000000000000000000000000000000000000000000000000081526001600160a01b038716600482015260248101829052604401610530565b505b50505b5060019392505050565b6001600160a01b038083166000818152600260205260408120549092169081146123dd576001600160a01b0381166000908152602081905260409020610e5890846125d6565b6001600160a01b0384166000908152602081905260409020610e8290846125d6565b600061099f83836125f8565b600061099f83836126eb565b6001600160a01b0381166000908152602081815260408083206001909252822090916124428361273a565b9050600061244f8361273a565b905060005b828110156124dd5760006124688683612590565b6001600160a01b03891660009081526020819052604081209192509061248e90836125c1565b905080156124d3576040516001906001600160a01b0380851691908c16907f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a90600090a45b5050600101612454565b5060005b818110156125675760006124f58583612590565b6001600160a01b03891660009081526001602052604081209192509061251b908361240b565b9050801561255d5760405160019083906001600160a01b038c16907fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d90600090a45b50506001016124e1565b50505050505050565b6060610e8682612744565b600061099f836001600160a01b0384166125f8565b600061099f83836127a0565b6060600061099f83612744565b6000818152600183016020526040812054151561099f565b600061099f836001600160a01b0384166126eb565b6001600160a01b0381166000908152600183016020526040812054151561099f565b600081815260018301602052604081205480156126e157600061261c600183612b49565b855490915060009061263090600190612b49565b905081811461269557600086600001828154811061265057612650612a7a565b906000526020600020015490508087600001848154811061267357612673612a7a565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806126a6576126a6612b83565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610e86565b6000915050610e86565b600081815260018301602052604081205461273257508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610e86565b506000610e86565b6000610e86825490565b60608160000180548060200260200160405190810160405280929190818152602001828054801561279457602002820191906000526020600020905b815481526020019060010190808311612780575b50505050509050919050565b60008260000182815481106127b7576127b7612a7a565b9060005260206000200154905092915050565b6001600160a01b03811681146127df57600080fd5b50565b60008083601f8401126127f457600080fd5b50813567ffffffffffffffff81111561280c57600080fd5b6020830191508360208260051b850101111561282757600080fd5b9250929050565b80358015158114610e0d57600080fd5b6000806000806060858703121561285457600080fd5b843561285f816127ca565b9350602085013567ffffffffffffffff81111561287b57600080fd5b612887878288016127e2565b909450925061289a90506040860161282e565b905092959194509250565b600080604083850312156128b857600080fd5b82356128c3816127ca565b915060208301356128d3816127ca565b809150509250929050565b6000602082840312156128f057600080fd5b813561099f816127ca565b6020808252825182820181905260009190848201906040850190845b8181101561293357835183529284019291840191600101612917565b50909695505050505050565b6000806040838503121561295257600080fd5b823561295d816127ca565b915061296b6020840161282e565b90509250929050565b6000806040838503121561298757600080fd5b8235612992816127ca565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156129335783516001600160a01b0316835292840192918401916001016129bc565b6000806000606084860312156129f657600080fd5b8335612a01816127ca565b925060208401359150612a166040850161282e565b90509250925092565b600080600060608486031215612a3457600080fd5b8335612a3f816127ca565b92506020840135612a4f816127ca565b9150612a166040850161282e565b600060208284031215612a6f57600080fd5b815161099f816127ca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020815281602082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612ae257600080fd5b8260051b80856040850137919091016040019392505050565b60208082528181018390526000908460408401835b86811015612b3e578235612b23816127ca565b6001600160a01b031682529183019190830190600101612b10565b509695505050505050565b81810381811115610e86577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122013771be8ac13ebee5ecc8ae1d2f3d2ef6e491f9557d8e336434f0bb94bf94fd764736f6c63430008110033";

type OperatorFilterRegistry0817ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OperatorFilterRegistry0817ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OperatorFilterRegistry0817__factory extends ContractFactory {
  constructor(...args: OperatorFilterRegistry0817ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OperatorFilterRegistry0817> {
    return super.deploy(overrides || {}) as Promise<OperatorFilterRegistry0817>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OperatorFilterRegistry0817 {
    return super.attach(address) as OperatorFilterRegistry0817;
  }
  override connect(signer: Signer): OperatorFilterRegistry0817__factory {
    return super.connect(signer) as OperatorFilterRegistry0817__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperatorFilterRegistry0817Interface {
    return new utils.Interface(_abi) as OperatorFilterRegistry0817Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OperatorFilterRegistry0817 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OperatorFilterRegistry0817;
  }
}
