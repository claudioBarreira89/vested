/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DropMockBase, DropMockBaseInterface } from "../DropMockBase";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bool",
        name: "admin",
        type: "bool",
      },
    ],
    name: "setIsAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ab806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806324d7806c1461003b578063c4d259ad14610088575b600080fd5b610074610049366004610117565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b6100ec610096366004610139565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b803573ffffffffffffffffffffffffffffffffffffffff8116811461011257600080fd5b919050565b60006020828403121561012957600080fd5b610132826100ee565b9392505050565b6000806040838503121561014c57600080fd5b610155836100ee565b91506020830135801515811461016a57600080fd5b80915050925092905056fea26469706673582212209743b789f51bd6f4b120ee99fc2b733d8e9185fd5535223868864bfe07f0604764736f6c634300080a0033";

type DropMockBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropMockBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropMockBase__factory extends ContractFactory {
  constructor(...args: DropMockBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DropMockBase> {
    return super.deploy(overrides || {}) as Promise<DropMockBase>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DropMockBase {
    return super.attach(address) as DropMockBase;
  }
  override connect(signer: Signer): DropMockBase__factory {
    return super.connect(signer) as DropMockBase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropMockBaseInterface {
    return new utils.Interface(_abi) as DropMockBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropMockBase {
    return new Contract(address, _abi, signerOrProvider) as DropMockBase;
  }
}
