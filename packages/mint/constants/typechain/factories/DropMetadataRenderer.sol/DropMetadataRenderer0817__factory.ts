/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DropMetadataRenderer0817,
  DropMetadataRenderer0817Interface,
} from "../../DropMetadataRenderer.sol/DropMetadataRenderer0817";

const _abi = [
  {
    inputs: [],
    name: "Access_OnlyAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "MetadataFrozen",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataBase",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataExtension",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "freezeAt",
        type: "uint256",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "provenanceHash",
        type: "bytes32",
      },
    ],
    name: "ProvenanceHashUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "contractURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeWithData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "metadataBaseByContract",
    outputs: [
      {
        internalType: "string",
        name: "base",
        type: "string",
      },
      {
        internalType: "string",
        name: "extension",
        type: "string",
      },
      {
        internalType: "string",
        name: "contractURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "freezeAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "provenanceHashes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "baseUri",
        type: "string",
      },
      {
        internalType: "string",
        name: "newContractUri",
        type: "string",
      },
    ],
    name: "updateMetadataBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataBase",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataExtension",
        type: "string",
      },
      {
        internalType: "string",
        name: "newContractURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "freezeAt",
        type: "uint256",
      },
    ],
    name: "updateMetadataBaseWithDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "provenanceHash",
        type: "bytes32",
      },
    ],
    name: "updateProvenanceHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061130e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c87b56dd1161005b578063c87b56dd146100f4578063cc1306db14610114578063de5af49b14610127578063e8a3d4851461015557600080fd5b806342495a951461008d578063856a7ffa146100a257806391074f98146100b5578063af806d56146100e1575b600080fd5b6100a061009b366004610d0c565b61015d565b005b6100a06100b0366004610dad565b61025b565b6100c86100c3366004610df6565b610298565b6040516100d89493929190610e61565b60405180910390f35b6100a06100ef366004610eac565b610458565b610107610102366004610f20565b610564565b6040516100d89190610f39565b6100a0610122366004610f4c565b61078d565b610147610135366004610df6565b60016020526000908152604090205481565b6040519081526020016100d8565b6101076108dd565b8473ffffffffffffffffffffffffffffffffffffffff8116331480159061020f57506040517f24d7806c00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c90602401602060405180830381865afa1580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d9190610f76565b155b15610246576040517f02bd6bd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102538686868686610992565b505050505050565b600080828060200190518101906102729190610fdd565b91509150610293338360405180602001604052806000815250846000610992565b505050565b6000602081905290815260409020805481906102b390611041565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90611041565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b50505050509080600101805461034190611041565b80601f016020809104026020016040519081016040528092919081815260200182805461036d90611041565b80156103ba5780601f1061038f576101008083540402835291602001916103ba565b820191906000526020600020905b81548152906001019060200180831161039d57829003601f168201915b5050505050908060020180546103cf90611041565b80601f01602080910402602001604051908101604052809291908181526020018280546103fb90611041565b80156104485780601f1061041d57610100808354040283529160200191610448565b820191906000526020600020905b81548152906001019060200180831161042b57829003601f168201915b5050505050908060030154905084565b8273ffffffffffffffffffffffffffffffffffffffff8116331480159061050a57506040517f24d7806c00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c90602401602060405180830381865afa1580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105089190610f76565b155b15610541576040517f02bd6bd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61055e848460405180602001604052806000815250856000610992565b50505050565b3360009081526020819052604080822081516080810190925280546060939291908290829061059290611041565b80601f01602080910402602001604051908101604052809291908181526020018280546105be90611041565b801561060b5780601f106105e05761010080835404028352916020019161060b565b820191906000526020600020905b8154815290600101906020018083116105ee57829003601f168201915b5050505050815260200160018201805461062490611041565b80601f016020809104026020016040519081016040528092919081815260200182805461065090611041565b801561069d5780601f106106725761010080835404028352916020019161069d565b820191906000526020600020905b81548152906001019060200180831161068057829003601f168201915b505050505081526020016002820180546106b690611041565b80601f01602080910402602001604051908101604052809291908181526020018280546106e290611041565b801561072f5780601f106107045761010080835404028352916020019161072f565b820191906000526020600020905b81548152906001019060200180831161071257829003601f168201915b50505050508152602001600382015481525050905080600001515160000361075657600080fd5b805161076184610abe565b60208084015160405161077694939201611094565b604051602081830303815290604052915050919050565b8173ffffffffffffffffffffffffffffffffffffffff8116331480159061083f57506040517f24d7806c00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c90602401602060405180830381865afa158015610819573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083d9190610f76565b155b15610876576040517f02bd6bd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff831660008181526001602052604090819020849055517ff2e078c4022bfd6c56addd06540a4a5dd4252b6b2c424b6840c184063f48fc27906108d09085815260200190565b60405180910390a2505050565b336000908152602081905260408120600201805460609291906108ff90611041565b80601f016020809104026020016040519081016040528092919081815260200182805461092b90611041565b80156109785780601f1061094d57610100808354040283529160200191610978565b820191906000526020600020905b81548152906001019060200180831161095b57829003601f168201915b50505050509050805160000361098d57600080fd5b919050565b80158015906109a057504281115b156109d7576040517feef043fe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160808101825285815260208082018690528183018590526060820184905273ffffffffffffffffffffffffffffffffffffffff88166000908152908190529190912081518190610a2b908261111d565b5060208201516001820190610a40908261111d565b5060408201516002820190610a55908261111d565b50606082015181600301559050508473ffffffffffffffffffffffffffffffffffffffff167f5eff125d5659803f33dbda215d6e8bfe0a404fd213a9ecb5e61973ee16cb17e785858585604051610aaf9493929190610e61565b60405180910390a25050505050565b606081600003610b0157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610b2b5780610b158161120c565b9150610b249050600a83611255565b9150610b05565b60008167ffffffffffffffff811115610b4657610b46610c1f565b6040519080825280601f01601f191660200182016040528015610b70576020820181803683370190505b5090505b8415610bf357610b85600183611269565b9150610b92600a86611282565b610b9d906030611296565b60f81b818381518110610bb257610bb26112a9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610bec600a86611255565b9450610b74565b949350505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461098d57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c7757610c77610c1f565b604052919050565b600067ffffffffffffffff821115610c9957610c99610c1f565b50601f01601f191660200190565b6000610cba610cb584610c7f565b610c4e565b9050828152838383011115610cce57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610cf657600080fd5b610d0583833560208501610ca7565b9392505050565b600080600080600060a08688031215610d2457600080fd5b610d2d86610bfb565b9450602086013567ffffffffffffffff80821115610d4a57600080fd5b610d5689838a01610ce5565b95506040880135915080821115610d6c57600080fd5b610d7889838a01610ce5565b94506060880135915080821115610d8e57600080fd5b50610d9b88828901610ce5565b95989497509295608001359392505050565b600060208284031215610dbf57600080fd5b813567ffffffffffffffff811115610dd657600080fd5b8201601f81018413610de757600080fd5b610bf384823560208401610ca7565b600060208284031215610e0857600080fd5b610d0582610bfb565b60005b83811015610e2c578181015183820152602001610e14565b50506000910152565b60008151808452610e4d816020860160208601610e11565b601f01601f19169290920160200192915050565b608081526000610e746080830187610e35565b8281036020840152610e868187610e35565b90508281036040840152610e9a8186610e35565b91505082606083015295945050505050565b600080600060608486031215610ec157600080fd5b610eca84610bfb565b9250602084013567ffffffffffffffff80821115610ee757600080fd5b610ef387838801610ce5565b93506040860135915080821115610f0957600080fd5b50610f1686828701610ce5565b9150509250925092565b600060208284031215610f3257600080fd5b5035919050565b602081526000610d056020830184610e35565b60008060408385031215610f5f57600080fd5b610f6883610bfb565b946020939093013593505050565b600060208284031215610f8857600080fd5b81518015158114610d0557600080fd5b600082601f830112610fa957600080fd5b8151610fb7610cb582610c7f565b818152846020838601011115610fcc57600080fd5b610bf3826020830160208701610e11565b60008060408385031215610ff057600080fd5b825167ffffffffffffffff8082111561100857600080fd5b61101486838701610f98565b9350602085015191508082111561102a57600080fd5b5061103785828601610f98565b9150509250929050565b600181811c9082168061105557607f821691505b60208210810361108e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600084516110a6818460208901610e11565b8451908301906110ba818360208901610e11565b84519101906110cd818360208801610e11565b0195945050505050565b601f82111561029357600081815260208120601f850160051c810160208610156110fe5750805b601f850160051c820191505b818110156102535782815560010161110a565b815167ffffffffffffffff81111561113757611137610c1f565b61114b816111458454611041565b846110d7565b602080601f83116001811461118057600084156111685750858301515b600019600386901b1c1916600185901b178555610253565b600085815260208120601f198616915b828110156111af57888601518255948401946001909101908401611190565b50858210156111cd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600019820361121f5761121f6111dd565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261126457611264611226565b500490565b8181038181111561127c5761127c6111dd565b92915050565b60008261129157611291611226565b500690565b8082018082111561127c5761127c6111dd565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220e21b2fcb56fbdadd2b3ba85f842aac6e93c0cf6fa3da216d89dda028eeb4b00464736f6c63430008110033";

type DropMetadataRenderer0817ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DropMetadataRenderer0817ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DropMetadataRenderer0817__factory extends ContractFactory {
  constructor(...args: DropMetadataRenderer0817ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DropMetadataRenderer0817> {
    return super.deploy(overrides || {}) as Promise<DropMetadataRenderer0817>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DropMetadataRenderer0817 {
    return super.attach(address) as DropMetadataRenderer0817;
  }
  override connect(signer: Signer): DropMetadataRenderer0817__factory {
    return super.connect(signer) as DropMetadataRenderer0817__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DropMetadataRenderer0817Interface {
    return new utils.Interface(_abi) as DropMetadataRenderer0817Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropMetadataRenderer0817 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DropMetadataRenderer0817;
  }
}
