/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DeployFeeRegistry,
  DeployFeeRegistryInterface,
} from "../../DeployFeeRegistry.s.sol/DeployFeeRegistry";

const _abi = [
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "setupFeeRegistry",
    outputs: [
      {
        internalType: "contract OwnedSubscriptionManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506111068061002d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633a768463146100515780634dc7da5414610096578063c0406226146100a9578063f8ccbf47146100b3575b600080fd5b61006c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61006c6100a4366004610917565b6100d0565b6100b16103ff565b005b6000546100c09060ff1681565b604051901515815260200161008d565b600080826040516100e0906108e8565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f080158015610119573d6000803e3d6000fd5b5060408051600680825260e08201909252919250600091906020820160c08036833701905050905073f42aa99f011a1fa7cda90e5e98b277e306bca83e816000815181106101695761016961093b565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073024ac22acdb367a3ae52a3d94ac6649fdc1f0779816001815181106101cb576101cb61093b565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073fed24ec7e22f573c2e08aef55aa6797ca2b3a0518160028151811061022d5761022d61093b565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506e0111abe46ff893f3b2fdf1f759a8a88160038151811061028a5761028a61093b565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073f849de01b080adc3a814fabe1e2087475cf2e354816004815181106102ec576102ec61093b565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050732b2e8cda09bba9660dca5cb6233787738ad683298160058151811061034e5761034e61093b565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101526040517fa14584c10000000000000000000000000000000000000000000000000000000081526daaeb6d7670e522a718067333cd4e90819063a14584c1906103c4908690869060019060040161096a565b600060405180830381600087803b1580156103de57600080fd5b505af11580156103f2573d6000803e3d6000fd5b5094979650505050505050565b6040517fc1978d1f00000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f434841494e5f49440000000000000000000000000000000000000000000000006044820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c1978d1f906064016020604051808303816000875af115801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be91906109dd565b90506104ff6040518060400160405280600881526020017f434841494e5f49440000000000000000000000000000000000000000000000008152508261075d565b61053d6040518060400160405280600c81526020017f5374617274696e67202d2d2d00000000000000000000000000000000000000008152506107d4565b604080517f7fb5297f0000000000000000000000000000000000000000000000000000000081529051737109709ecfa91a80626ff3989d68f67f5b1dd12d91637fb5297f91600480830192600092919082900301818387803b1580156105a257600080fd5b505af11580156105b6573d6000803e3d6000fd5b50506040517f350d56bf00000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f535542534352495054494f4e5f4f574e45520000000000000000000000000000604482015260009250737109709ecfa91a80626ff3989d68f67f5b1dd12d915063350d56bf906064016020604051808303816000875af1158015610655573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067991906109f6565b90506106b96040518060400160405280601381526020017f5365747570206f70657261746f7273202d2d2d000000000000000000000000008152506107d4565b60006106c4826100d0565b90507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c73ffffffffffffffffffffffffffffffffffffffff166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561073757600080fd5b505af115801561074b573d6000803e3d6000fd5b5050505061075881610848565b505050565b6107d08282604051602401610773929190610a59565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f9710a9d0000000000000000000000000000000000000000000000000000000001790526108c7565b5050565b610845816040516024016107e89190610a7b565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac000000000000000000000000000000000000000000000000000000001790526108c7565b50565b60405173ffffffffffffffffffffffffffffffffffffffff821660248201526108459060440160408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f2c2ecbc2000000000000000000000000000000000000000000000000000000001790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61064280610a8f83390190565b73ffffffffffffffffffffffffffffffffffffffff8116811461084557600080fd5b60006020828403121561092957600080fd5b8135610934816108f5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060820173ffffffffffffffffffffffffffffffffffffffff80871684526020606081860152828751808552608087019150828901945060005b818110156109c45785518516835294830194918301916001016109a6565b5050809450505050508215156040830152949350505050565b6000602082840312156109ef57600080fd5b5051919050565b600060208284031215610a0857600080fd5b8151610934816108f5565b6000815180845260005b81811015610a3957602081850181015186830182015201610a1d565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000610a6c6040830185610a13565b90508260208301529392505050565b6020815260006109346020830184610a1356fe60a06040526daaeb6d7670e522a718067333cd4e60805234801561002257600080fd5b50604051610642380380610642833981016040819052610041916100ed565b600080546001600160a01b0319166001600160a01b03831690811782556040518392907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350608051604051632210724360e11b81523060048201526001600160a01b0390911690634420e48690602401600060405180830381600087803b1580156100cf57600080fd5b505af11580156100e3573d6000803e3d6000fd5b505050505061011d565b6000602082840312156100ff57600080fd5b81516001600160a01b038116811461011657600080fd5b9392505050565b60805161050d6101356000396000505061050d6000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b1461009c578063e30c3978146100df578063f2fde38b146100fd57600080fd5b806323452b9c14610077578063395db2cd1461008157806379ba509714610094575b600080fd5b61007f610110565b005b61007f61008f36600461049a565b6101d5565b61007f61029c565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b60015473ffffffffffffffffffffffffffffffffffffffff166100b6565b61007f61010b36600461049a565b61037e565b60005473ffffffffffffffffffffffffffffffffffffffff163314610161576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546000805460405173ffffffffffffffffffffffffffffffffffffffff93841693909116917f682679deecef4dcd49674845cc1e3a075fea9073680aa445a8207d5a4bdea3da91a3600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610226576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917f4f2638f5949b9614ef8d5e268cb51348ad7f434a34812bf64b6e95014fbd357e9190a350565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102ed576040517f065cd53100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054604051339273ffffffffffffffffffffffffffffffffffffffff909216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811673ffffffffffffffffffffffffffffffffffffffff841617909155169055565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103cf576040517fd238ed5900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103d8816103db565b50565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8381169190911790915560015416156103d857600180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905550565b6000602082840312156104ac57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146104d057600080fd5b939250505056fea2646970667358221220d32cab87e14abb2acd03692dd6983e7b3b1aa370e27692ad8a36cb9bf439d78564736f6c63430008110033a2646970667358221220210542f6f6592ee6a48082302509f901daa2b31a19d10566ee76d741bfbea7fb64736f6c63430008110033";

type DeployFeeRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployFeeRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeployFeeRegistry__factory extends ContractFactory {
  constructor(...args: DeployFeeRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeployFeeRegistry> {
    return super.deploy(overrides || {}) as Promise<DeployFeeRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeployFeeRegistry {
    return super.attach(address) as DeployFeeRegistry;
  }
  override connect(signer: Signer): DeployFeeRegistry__factory {
    return super.connect(signer) as DeployFeeRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployFeeRegistryInterface {
    return new utils.Interface(_abi) as DeployFeeRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeployFeeRegistry {
    return new Contract(address, _abi, signerOrProvider) as DeployFeeRegistry;
  }
}
