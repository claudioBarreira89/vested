/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Version0817,
  Version0817Interface,
} from "../../Version.sol/Version0817";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "version",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "contractVersion",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161011f38038061011f83398101604081905261002f9161003d565b63ffffffff1660805261006a565b60006020828403121561004f57600080fd5b815163ffffffff8116811461006357600080fd5b9392505050565b608051609d6100826000396000602f0152609d6000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a0a8e46014602d575b600080fd5b7f000000000000000000000000000000000000000000000000000000000000000060405163ffffffff909116815260200160405180910390f3fea2646970667358221220cd40854e6a5ae32a917958a8a2902a520c7001c2307c130448781e6a2d04c22c64736f6c63430008110033";

type Version0817ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Version0817ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Version0817__factory extends ContractFactory {
  constructor(...args: Version0817ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    version: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Version0817> {
    return super.deploy(version, overrides || {}) as Promise<Version0817>;
  }
  override getDeployTransaction(
    version: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(version, overrides || {});
  }
  override attach(address: string): Version0817 {
    return super.attach(address) as Version0817;
  }
  override connect(signer: Signer): Version0817__factory {
    return super.connect(signer) as Version0817__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Version0817Interface {
    return new utils.Interface(_abi) as Version0817Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Version0817 {
    return new Contract(address, _abi, signerOrProvider) as Version0817;
  }
}
