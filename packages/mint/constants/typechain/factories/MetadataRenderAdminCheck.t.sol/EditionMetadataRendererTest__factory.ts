/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  EditionMetadataRendererTest,
  EditionMetadataRendererTestInterface,
} from "../../MetadataRenderAdminCheck.t.sol/EditionMetadataRendererTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mockBase",
    outputs: [
      {
        internalType: "contract DropMockBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testAdmin",
    outputs: [
      {
        internalType: "contract TestAdmin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "test_MetadataRenderAdminCheckGetterFailure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test_MetadataRenderAdminCheckSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "test_MetadataRenderAdminCheckSuccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50610bc3806100316000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c80639d96732b11610076578063d0c481a21161005b578063d0c481a21461017a578063f8ccbf4714610182578063fa7626d41461019557600080fd5b80639d96732b14610142578063ba414fa61461016257600080fd5b806338e6bc14116100a757806338e6bc14146101175780633a7684631461011f578063413ef4df1461013a57600080fd5b80630a9254e4146100c35780632e3109f1146100cd575b600080fd5b6100cb6101a2565b005b6008546100ed9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100cb610280565b6100ed737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6100cb61042e565b6009546100ed9073ffffffffffffffffffffffffffffffffffffffff1681565b61016a610538565b604051901515815260200161010e565b6100cb610698565b60005461016a9062010000900460ff1681565b60005461016a9060ff1681565b6040516101ae906106ec565b604051809103906000f0801580156101ca573d6000803e3d6000fd5b50600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905560405161021c906106f9565b604051809103906000f080158015610238573d6000803e3d6000fd5b50600980547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6008546040517fc4d259ad000000000000000000000000000000000000000000000000000000008152601260048201526001602482015273ffffffffffffffffffffffffffffffffffffffff9091169063c4d259ad90604401600060405180830381600087803b1580156102f357600080fd5b505af1158015610307573d6000803e3d6000fd5b50506008546040517f06447d560000000000000000000000000000000000000000000000000000000081526012600482015273ffffffffffffffffffffffffffffffffffffffff9091169250737109709ecfa91a80626ff3989d68f67f5b1dd12d91506306447d56906024015b600060405180830381600087803b15801561038e57600080fd5b505af11580156103a2573d6000803e3d6000fd5b50506009546040517f4ad2de1500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301529091169250634ad2de159150602401600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b5050505050565b6008546040517f06447d560000000000000000000000000000000000000000000000000000000081526012600482015273ffffffffffffffffffffffffffffffffffffffff90911690737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156104b057600080fd5b505af11580156104c4573d6000803e3d6000fd5b50506040517fc31eb0e00000000000000000000000000000000000000000000000000000000081527f02bd6bd1000000000000000000000000000000000000000000000000000000006004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c31eb0e09150602401610374565b60008054610100900460ff16156105585750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106935760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916105fd917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610741565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526106359161077d565b6000604051808303816000865af19150503d8060008114610672576040519150601f19603f3d011682016040523d82523d6000602084013e610677565b606091505b509150508080602001905181019061068f9190610790565b9150505b919050565b6040517f06447d5600000000000000000000000000000000000000000000000000000000815260106004820181905290737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401610374565b6101cb806107b383390190565b6102108061097e83390190565b6000815160005b81811015610727576020818501810151868301520161070d565b81811115610736576000828601525b509290920192915050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260006107756004830184610706565b949350505050565b60006107898284610706565b9392505050565b6000602082840312156107a257600080fd5b8151801515811461078957600080fdfe608060405234801561001057600080fd5b506101ab806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806324d7806c1461003b578063c4d259ad14610088575b600080fd5b610074610049366004610117565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b6100ec610096366004610139565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b803573ffffffffffffffffffffffffffffffffffffffff8116811461011257600080fd5b919050565b60006020828403121561012957600080fd5b610132826100ee565b9392505050565b6000806040838503121561014c57600080fd5b610155836100ee565b91506020830135801515811461016a57600080fd5b80915050925092905056fea26469706673582212209743b789f51bd6f4b120ee99fc2b733d8e9185fd5535223868864bfe07f0604764736f6c634300080a0033608060405234801561001057600080fd5b506101f0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634ad2de1514610030575b600080fd5b61004361003e36600461015b565b610045565b005b8073ffffffffffffffffffffffffffffffffffffffff811633148015906100f757506040517f24d7806c00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c90602401602060405180830381865afa1580156100d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f59190610198565b155b1561012e576040517f02bd6bd100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517fe0c639021f79ad31e1aacf49a83e0271d8e62700ff8aefd948df19d1053fbd6590600090a15050565b60006020828403121561016d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461019157600080fd5b9392505050565b6000602082840312156101aa57600080fd5b8151801515811461019157600080fdfea26469706673582212204fff9571a47005b337b6db8e87c741ec400df6364a98e6a5639ec2733549569364736f6c634300080a0033a2646970667358221220b24193ee8bc666c31d27c38941741e16e87a649bc805de2aa833c318f0c3d2f264736f6c634300080a0033";

type EditionMetadataRendererTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EditionMetadataRendererTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EditionMetadataRendererTest__factory extends ContractFactory {
  constructor(...args: EditionMetadataRendererTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EditionMetadataRendererTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<EditionMetadataRendererTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EditionMetadataRendererTest {
    return super.attach(address) as EditionMetadataRendererTest;
  }
  override connect(signer: Signer): EditionMetadataRendererTest__factory {
    return super.connect(signer) as EditionMetadataRendererTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EditionMetadataRendererTestInterface {
    return new utils.Interface(_abi) as EditionMetadataRendererTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EditionMetadataRendererTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as EditionMetadataRendererTest;
  }
}
